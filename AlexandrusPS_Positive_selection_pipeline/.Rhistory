# lenght_table <- rbind(LabelTableGFGG_GF_, lenght_table)
#
# LabelTableGFGG_GG_ <- subset(LabelTable,Label == "GFGG") %>%
#   rowwise() %>% mutate(prot_name=unlist(strsplit(GG,split="@@@"))[2]) %>% left_join(Trinity_header_GG,by=c("prot_name"="prot_name"))
# LabelTableGFGG_GG_ <- LabelTableGFGG_GG_[,c(5,6)]
# LabelTableGFGG_GG_$Specie = sp
# LabelTableGFGG_GG_$Mode = "GG"
#
# lenght_table <- rbind(LabelTableGFGG_GG_, lenght_table)
# lenght_table <- unique(lenght_table)
LabelTableGFGG_GF_ <- subset(LabelTable,Label == "GFGG") %>%
rowwise() %>% mutate(prot_name=unlist(strsplit(GF,split="@@@"))[2])  %>% mutate(prot_name=unlist(strsplit(prot_name,split=","))[1]) %>% left_join(Trinity_header_GF,by=c("prot_name"="prot_name"))
LabelTableGFGG_GF_ <- LabelTableGFGG_GF_[,c(5,6)]
LabelTableGFGG_GF_$Specie = sp
LabelTableGFGG_GF_$Mode = "GF"
write.table(LabelTableGFGG_GF_$prot_name, file = paste(sp,"_GF_InterGFGG.txt", sep = ""), sep = "\t", quote = FALSE, row.names = F, col.names = FALSE)
lenght_table <- rbind(LabelTableGFGG_GF_, lenght_table)
LabelTableGFGG_GG_ <- subset(LabelTable,Label == "GFGG") %>%
rowwise() %>% mutate(prot_name=unlist(strsplit(GG,split="@@@"))[2]) %>% mutate(prot_name=unlist(strsplit(prot_name,split=","))[1]) %>% left_join(Trinity_header_GG,by=c("prot_name"="prot_name"))
LabelTableGFGG_GG_ <- LabelTableGFGG_GG_[,c(5,6)]
LabelTableGFGG_GG_$Specie = sp
LabelTableGFGG_GG_$Mode = "GG"
write.table(LabelTableGFGG_GF_$prot_name, file = paste(sp,"_GG_InterGFGG.txt", sep = ""), sep = "\t", quote = FALSE, row.names = F, col.names = FALSE)
lenght_table <- rbind(LabelTableGFGG_GG_, lenght_table)
LabelTableGFGG_GFGGWB_ <- subset(LabelTable,Label == "GFGGWB") %>%
rowwise() %>% mutate(prot_name=unlist(strsplit(GG,split="@@@"))[2]) %>% mutate(prot_name=unlist(strsplit(prot_name,split=","))[1]) %>% left_join(Trinity_header_GG,by=c("prot_name"="prot_name"))
LabelTableGFGG_GFGGWB_ <- LabelTableGFGG_GFGGWB_[,c(5,6)]
LabelTableGFGG_GFGGWB_$Specie = sp
LabelTableGFGG_GFGGWB_$Mode = "WBGFGG"
lenght_table <- rbind(LabelTableGFGG_GFGGWB_, lenght_table)
lenght_table <- unique(lenght_table)
}
}
library(dplyr)
library(ggplot2)
library(caret)
library(ggpubr)
library(viridis)
library(VennDiagram)
lenght_table <- read.csv(text="prot_name,ORF_length,Specie,Mode")
Sp_list <- as.character(read.table("~/PhD/Data/Nematode_Data/z14_list_of_names/species_with_genome.list", quote="\"", comment.char="", stringsAsFactors=FALSE)[,1])
Assembly_type <- c("GF", "GG")
for (sp in Sp_list){
for (at in Assembly_type){
if (sp == 'DF5006' | sp == 'DF5112' |sp == 'DF5012'){
at <- "GF"
}
Trinity_header_GF <- read.table(paste0("Trinity-GF_",sp,"_mincov1_ORFsize20aa.fasta.transdecoder.header"), quote="\"", comment.char="", stringsAsFactors=FALSE) %>%
rowwise() %>% mutate(prot_name=unlist(strsplit(V1,split=">"))[2]) %>% mutate(V2=as.numeric(unlist(strsplit(V2,split="len:"))[2]))
Trinity_header_GF <- Trinity_header_GF[,c(3,2)]
colnames(Trinity_header_GF)[2] <- "ORF_length"
Trinity_header_GG <- read.table(paste0("Trinity-GG_",sp,"_mincov1_ORFsize20aa.fasta.transdecoder.header"), quote="\"", comment.char="", stringsAsFactors=FALSE) %>%
rowwise() %>% mutate(prot_name=unlist(strsplit(V1,split=">"))[2]) %>% mutate(V2=as.numeric(unlist(strsplit(V2,split="len:"))[2]))
Trinity_header_GG <- Trinity_header_GG[,c(3,2)]
colnames(Trinity_header_GG)[2] <- "ORF_length"
ProteinOrtho <- read.delim(paste0("/home/alejandro/PhD/Data/Nematode_Data/z12_WBGFGG_comparisonEachSpecie/AC-B0000163_Just_",sp,"_PO.proteinortho"), stringsAsFactors=FALSE)
temp_orthology_2 <- ProteinOrtho[,c(4,5,6)]
colnames(temp_orthology_2)[1] <- "GF"
colnames(temp_orthology_2)[2] <- "GG"
colnames(temp_orthology_2)[3] <- "WB"
temp_orthology_2[temp_orthology_2 == "*"] <- NA
LabelTable <- temp_orthology_2 %>%
mutate(Label = case_when(
!is.na(GF) & !is.na(GG) & !is.na(WB) ~ "GFGGWB",
!is.na(GF) & !is.na(GG) & is.na(WB) ~ "GFGG",
!is.na(GF) & is.na(GG) & !is.na(WB) ~ "GFWB",
is.na(GF) & !is.na(GG) & !is.na(WB) ~ "GGWB",
!is.na(GF) & is.na(GG) & is.na(WB) ~ "GF",
is.na(GF) & !is.na(GG) & is.na(WB) ~ "GG",
is.na(GF) & is.na(GG) & !is.na(WB) ~ "WB",
TRUE ~ "other"
)
)
# LabelTableGFGG_GF_ <- subset(LabelTable,Label == "GFGG") %>%
#   rowwise() %>% mutate(prot_name=unlist(strsplit(GF,split="@@@"))[2]) %>% left_join(Trinity_header_GF,by=c("prot_name"="prot_name"))
# LabelTableGFGG_GF_ <- LabelTableGFGG_GF_[,c(5,6)]
# LabelTableGFGG_GF_$Specie = sp
# LabelTableGFGG_GF_$Mode = "GF"
#
# lenght_table <- rbind(LabelTableGFGG_GF_, lenght_table)
#
# LabelTableGFGG_GG_ <- subset(LabelTable,Label == "GFGG") %>%
#   rowwise() %>% mutate(prot_name=unlist(strsplit(GG,split="@@@"))[2]) %>% left_join(Trinity_header_GG,by=c("prot_name"="prot_name"))
# LabelTableGFGG_GG_ <- LabelTableGFGG_GG_[,c(5,6)]
# LabelTableGFGG_GG_$Specie = sp
# LabelTableGFGG_GG_$Mode = "GG"
#
# lenght_table <- rbind(LabelTableGFGG_GG_, lenght_table)
# lenght_table <- unique(lenght_table)
LabelTableGFGG_GF_ <- subset(LabelTable,Label == "GFGG") %>%
rowwise() %>% mutate(prot_name=unlist(strsplit(GF,split="@@@"))[2])  %>% mutate(prot_name=unlist(strsplit(prot_name,split=","))[1]) %>% left_join(Trinity_header_GF,by=c("prot_name"="prot_name"))
LabelTableGFGG_GF_ <- LabelTableGFGG_GF_[,c(5,6)]
LabelTableGFGG_GF_$Specie = sp
LabelTableGFGG_GF_$Mode = "GF"
write.table(LabelTableGFGG_GF_$prot_name, file = paste(sp,"_GF_InterGFGG.txt", sep = ""), sep = "\t", quote = FALSE, row.names = F, col.names = FALSE)
lenght_table <- rbind(LabelTableGFGG_GF_, lenght_table)
LabelTableGFGG_GG_ <- subset(LabelTable,Label == "GFGG") %>%
rowwise() %>% mutate(prot_name=unlist(strsplit(GG,split="@@@"))[2]) %>% mutate(prot_name=unlist(strsplit(prot_name,split=","))[1]) %>% left_join(Trinity_header_GG,by=c("prot_name"="prot_name"))
LabelTableGFGG_GG_ <- LabelTableGFGG_GG_[,c(5,6)]
LabelTableGFGG_GG_$Specie = sp
LabelTableGFGG_GG_$Mode = "GG"
write.table(LabelTableGFGG_GG_$prot_name, file = paste(sp,"_GG_InterGFGG.txt", sep = ""), sep = "\t", quote = FALSE, row.names = F, col.names = FALSE)
lenght_table <- rbind(LabelTableGFGG_GG_, lenght_table)
LabelTableGFGG_GFGGWB_ <- subset(LabelTable,Label == "GFGGWB") %>%
rowwise() %>% mutate(prot_name=unlist(strsplit(GG,split="@@@"))[2]) %>% mutate(prot_name=unlist(strsplit(prot_name,split=","))[1]) %>% left_join(Trinity_header_GG,by=c("prot_name"="prot_name"))
LabelTableGFGG_GFGGWB_ <- LabelTableGFGG_GFGGWB_[,c(5,6)]
LabelTableGFGG_GFGGWB_$Specie = sp
LabelTableGFGG_GFGGWB_$Mode = "WBGFGG"
lenght_table <- rbind(LabelTableGFGG_GFGGWB_, lenght_table)
lenght_table <- unique(lenght_table)
}
}
PositiveSelectionTable <- read.delim("~/PhD/Code/AC-B0000171_Positive_Selection_M0SM/PositiveSelectionTable.txt.clean.txt.sort.uniq.txt.OnlyOneEntry.txt.header.txt", stringsAsFactors=FALSE)
View(PositiveSelectionTable)
PositiveSelectionTable <- read.delim("~/PhD/Data/Nematode_Data/z17_Positive_Selection_Table_AC-B0000171/PositiveSelectionTable.txt.clean.txt.sort.uniq.txt.OnlyOneEntry.txt.header.txt", stringsAsFactors=FALSE)
View(PositiveSelectionTable)
PositiveSelectionTable <- read.delim("~/PhD/Data/Nematode_Data/z17_Positive_Selection_Table_AC-B0000171/PositiveSelectionTable.txt.clean.txt.sort.uniq.txt.OnlyOneEntry.txt.header.txt", stringsAsFactors=FALSE)
View(PositiveSelectionTable)
library(dplyr)
library(ggplot2)
library(caret)
library(reshape2)
library(ggpubr)
library(RColorBrewer)
library(stringr)
library(viridis)
library(ggpubr)
PositiveSelectionTable <- read.delim("~/PhD/Data/Nematode_Data/z17_Positive_Selection_Table_AC-B0000171/PositiveSelectionTable.txt.clean.txt.sort.uniq.txt.OnlyOneEntry.txt.header.txt", stringsAsFactors=FALSE)
caeno <- c("cbrenneri","cbriggsae","celegans","cinopinata","cjaponica","cremanei","DF5112")
outgroup <- c("CEW1","DF5006", "DF5012","MT8872","ppacificus")
PositiveSelectionTable <- PositiveSelectionTable %>% rowwise() %>% mutate(category=case_when(
all(unlist(strsplit(Species,split=",")) %in% caeno) ~ "Caenorhabditis",
all(unlist(strsplit(Species,split=",")) %in% outgroup) ~ "Outgroup",
TRUE ~ "Mixed"
))
median <- PositiveSelectionTable %>%
select(category,M0_w) %>%
group_by(category) %>%  summarize(median=median(M0_w))
PositiveSelectionTable %>%
select(category,M0_w) %>%
ggplot(aes(x=M0_w,group=category,fill=category)) +
#geom_histogram(aes(y=..density..), colour="black", fill="white",binwidth=0.005)+
geom_density(alpha=.2#, fill="#FF6666"
) +
theme_bw() +
theme(legend.position="bottom")+
geom_vline(data = median, aes(xintercept = median,color = category), size=0.5,linetype="dashed")
## incremental Positive selection ####
PositiveSelectionTable <- read.delim("~/PhD/Data/Nematode_Data/z17_Positive_Selection_Table_AC-B0000171/PositiveSelectionTable.txt.clean.txt.sort.uniq.txt.OnlyOneEntry.txt.header.txt", stringsAsFactors=FALSE)
caeno <- c("cbrenneri","cbriggsae","celegans","cinopinata","cjaponica","cremanei","DF5112")
eurhabditis <- c("cbrenneri","cbriggsae","celegans","cinopinata","cjaponica","cremanei","DF5112","CEW1","DF5006")
#all <-              "DF5012","MT8872","ppacificus")
PositiveSelectionTable <- PositiveSelectionTable %>% rowwise() %>% mutate(category1=case_when(
all(unlist(strsplit(Species,split=",")) %in% caeno) ~ "Caenorhabditis",
TRUE ~ "Mixed"
)) %>% mutate(category2=case_when(
all(unlist(strsplit(Species,split=",")) %in% eurhabditis) ~ "Eurhabditis",
TRUE ~ "Mixed"
)) %>% mutate(category3="ALL")
median <- rbind(PositiveSelectionTable %>%
group_by(category1) %>%  summarize(median1=median(M0_w)) %>% rename(category=category1) %>% rename(median=median1),
PositiveSelectionTable %>%
group_by(category2) %>%  summarize(median2=median(M0_w)) %>% rename(category=category2) %>% rename(median=median2),
as_tibble(cbind("ALL",PositiveSelectionTable %>% pull(M0_w) %>% median())) %>% rename(category=V1) %>% rename(median=V2))
PositiveSelectionTable %>%
select(category1,M0_w) %>%
filter(category1=="Caenorhabditis") %>%
ggplot(aes(x=M0_w,group=category1,fill=category1)) +
#geom_histogram(aes(y=..density..), colour="black", fill="white",binwidth=0.005)+
geom_density(alpha=.2#, fill="#FF6666"
) +
geom_density(data=PositiveSelectionTable %>%
select(category2,M0_w) %>%
filter(category2=="Eurhabditis"),aes(x=M0_w,group=category2,fill=category2),
alpha=.2#, fill="#FF6666"
) +
geom_density(data=PositiveSelectionTable %>%
select(category3,M0_w)
,aes(x=M0_w ,group=category3,fill=category3
),
alpha=.2#, fill="#FF6666"
) +
theme_bw() +
theme(legend.position="bottom")+
labs(fill='Orthology subgroups') +
geom_vline(data = median %>% slice(c(1,3,5)), aes(xintercept = as.numeric(median),color = category), size=0.5,linetype="dashed", show.legend = F)
library(dplyr)
library(ggplot2)
library(caret)
library(reshape2)
library(ggpubr)
library(RColorBrewer)
library(stringr)
library(viridis)
library(ggpubr)
PositiveSelectionTable %>% rowwise() %>% mutate(M0_M3_DoF=(M3_np-M0_np))
test <- PositiveSelectionTable %>% rowwise() %>% mutate(M0_M3_DoF=(M3_np-M0_np))
View(test)
test <- PositiveSelectionTable %>% rowwise() %>%
mutate(M0_M3_DoF=(M3_np-M0_np)) %>%
mutate(M0_M3_LRT=2*(M3_lnL+M0_lnL))
test <- PositiveSelectionTable %>% rowwise() %>%
mutate(M0_M3_DoF=(M3_np-M0_np)) %>%
mutate(M0_M3_LRT=2*(M3_lnL-M0_lnL))
test <- PositiveSelectionTable %>% rowwise() %>%
mutate(M0_M3_DoF=(M3_np-M0_np)) %>%
mutate(M0_M3_LRT=2*(M3_lnL-M0_lnL)) %>%
mutate(M1_M2_DoF=(M2_np-M1_np)) %>%
mutate(M1_M2_LRT=2*(M1_lnL-M2_lnL)) %>%
mutate(M7_M8_DoF=(M8_np-M7_np)) %>%
mutate(M7_M8_LRT=2*(M8_lnL-M7_lnL))
test <- PositiveSelectionTable %>% rowwise() %>%
mutate(M0_M3_DoF=(M3_np-M0_np)) %>%
mutate(M0_M3_LRT=2*(M3_lnL-M0_lnL)) %>%
mutate(M1_M2_DoF=(M2_np-M1_np)) %>%
mutate(M1_M2_LRT=2*(M2_lnL-M1_lnL)) %>%
mutate(M7_M8_DoF=(M8_np-M7_np)) %>%
mutate(M7_M8_LRT=2*(M8_lnL-M7_lnL))
test <- PositiveSelectionTable %>% rowwise() %>%
mutate(M0_M3_DoF=(M3_np-M0_np)) %>%
mutate(M0_M3_LRT=2*(M3_lnL-M0_lnL)) %>%
mutate(M1_M2_DoF=(M2_np-M1_np)) %>%
mutate(M1_M2_LRT=2*(M2_lnL-M1_lnL)) %>%
mutate(M7_M8_DoF=(M8_np-M7_np)) %>%
mutate(M7_M8_LRT=2*(M8_lnL-M7_lnL))
View(test)
qchisq(0.05, 2, lower.tail=TRUE)
qchisq(0.05, 2, lower.tail=F)
unique(test$M1_M2_DoF)
qchisq(0.01, 2, lower.tail=F)
qchisq(0.001, 2, lower.tail=F)
hist(test$M1_M2_LRT)
hist(test$M1_M2_LRT,breaks=1000)
hist(test$M1_M2_LRT,breaks=1000,xlim=c(0,25))
which(test$M1_M2_LRT>13.81551)
test[1118,1:10]
test[1118,1:14]
which(test$M1_M2_LRT>9.21)
which(test$M1_M2_LRT>5.99)
test <- PositiveSelectionTable %>% rowwise() %>%
mutate(M0_M3_DoF=(M3_np-M0_np)) %>%
mutate(M0_M3_LRT=2*(M3_lnL-M0_lnL)) %>%
mutate(M1_M2_DoF=(M2_np-M1_np)) %>%
mutate(M1_M2_LRT=2*(M2_lnL-M1_lnL)) %>%
mutate(M7_M8_DoF=(M8_np-M7_np)) %>%
mutate(M7_M8_LRT=2*(M8_lnL-M7_lnL)) %>%
mutate(M0_M3_sig_0.05 = M0_M3_LRT>qchisq(0.05, M0_M3_DoF, lower.tail=F)) %>%
qchisq(0.05, 2, lower.tail=TRUE)
View(test)
qchisq(0.05, 2, lower.tail=TRUE)
qchisq(0.05, 2, lower.tail=TRUE)
test <- PositiveSelectionTable %>% rowwise() %>%
mutate(M0_M3_DoF=(M3_np-M0_np)) %>%
mutate(M0_M3_LRT=2*(M3_lnL-M0_lnL)) %>%
mutate(M1_M2_DoF=(M2_np-M1_np)) %>%
mutate(M1_M2_LRT=2*(M2_lnL-M1_lnL)) %>%
mutate(M7_M8_DoF=(M8_np-M7_np)) %>%
mutate(M7_M8_LRT=2*(M8_lnL-M7_lnL)) %>%
mutate(M0_M3_sig_0.05 = M0_M3_LRT > qchisq(0.05, M0_M3_DoF, lower.tail=F))
test <- PositiveSelectionTable %>% rowwise() %>%
mutate(M0_M3_DoF=(M3_np-M0_np)) %>%
mutate(M0_M3_LRT=2*(M3_lnL-M0_lnL)) %>%
mutate(M1_M2_DoF=(M2_np-M1_np)) %>%
mutate(M1_M2_LRT=2*(M2_lnL-M1_lnL)) %>%
mutate(M7_M8_DoF=(M8_np-M7_np)) %>%
mutate(M7_M8_LRT=2*(M8_lnL-M7_lnL)) %>%
mutate(M0_M3_sig_0.05 = M0_M3_LRT > qchisq(0.05, M0_M3_DoF, lower.tail=F)) %>%
mutate(M0_M3_sig_0.01 = M0_M3_LRT > qchisq(0.01, M0_M3_DoF, lower.tail=F)) %>%
mutate(M0_M3_sig_0.001 = M0_M3_LRT > qchisq(0.001, M0_M3_DoF, lower.tail=F)) %>%
qchisq(0.05, 2, lower.tail=TRUE)
test <- PositiveSelectionTable %>% rowwise() %>%
mutate(M0_M3_DoF=(M3_np-M0_np)) %>%
mutate(M0_M3_LRT=2*(M3_lnL-M0_lnL)) %>%
mutate(M1_M2_DoF=(M2_np-M1_np)) %>%
mutate(M1_M2_LRT=2*(M2_lnL-M1_lnL)) %>%
mutate(M7_M8_DoF=(M8_np-M7_np)) %>%
mutate(M7_M8_LRT=2*(M8_lnL-M7_lnL)) %>%
mutate(M0_M3_sig_0.05 = M0_M3_LRT > qchisq(0.05, M0_M3_DoF, lower.tail=F)) %>%
mutate(M0_M3_sig_0.01 = M0_M3_LRT > qchisq(0.01, M0_M3_DoF, lower.tail=F)) %>%
mutate(M0_M3_sig_0.001 = M0_M3_LRT > qchisq(0.001, M0_M3_DoF, lower.tail=F))
test <- PositiveSelectionTable %>% rowwise() %>%
mutate(M0_M3_DoF=(M3_np-M0_np)) %>%
mutate(M0_M3_LRT=2*(M3_lnL-M0_lnL)) %>%
mutate(M1_M2_DoF=(M2_np-M1_np)) %>%
mutate(M1_M2_LRT=2*(M2_lnL-M1_lnL)) %>%
mutate(M7_M8_DoF=(M8_np-M7_np)) %>%
mutate(M7_M8_LRT=2*(M8_lnL-M7_lnL)) %>%
mutate(M0_M3_sig_0.05 = M0_M3_LRT > qchisq(0.05, M0_M3_DoF, lower.tail=F)) %>%
mutate(M0_M3_sig_0.01 = M0_M3_LRT > qchisq(0.01, M0_M3_DoF, lower.tail=F)) %>%
mutate(M0_M3_sig_0.001 = M0_M3_LRT > qchisq(0.001, M0_M3_DoF, lower.tail=F)) %>%
mutate(M1_M2_sig_0.05 = M1_M2_LRT > qchisq(0.05, M1_M2_DoF, lower.tail=F)) %>%
mutate(M1_M2_sig_0.01 = M1_M2_LRT > qchisq(0.01, M1_M2_DoF, lower.tail=F)) %>%
mutate(M1_M2_sig_0.001 = M1_M2_LRT > qchisq(0.001, M1_M2_DoF, lower.tail=F)) %>%
mutate(M7_M8_sig_0.05 = M7_M8_LRT > qchisq(0.05, M7_M8_DoF, lower.tail=F)) %>%
mutate(M7_M8_sig_0.01 = M7_M8_LRT > qchisq(0.01, M7_M8_DoF, lower.tail=F)) %>%
mutate(M7_M8_sig_0.001 = M7_M8_LRT > qchisq(0.001, M7_M8_DoF, lower.tail=F))
unique(test$M7_M8_DoF)
table(test$M7_M8_sig_0.001)
table(test$M1_M2_sig_0.01)
which(test$M1_M2_sig_0.01)
test[1118,1:14]
which(test$M7_M8_sig_0.001)
pchisq(1606.014304, 2, lower.tail=F)
pchisq(1606.014304, 2, lower.tail=F)/log(10)
pchisq(1, df =  3)
pchisq(-2.000001e-06, 2, lower.tail=F)
pchisq(0.031286, 2, lower.tail=F)
test <- PositiveSelectionTable %>% rowwise() %>%
mutate(M0_M3_DoF=(M3_np-M0_np)) %>%
mutate(M0_M3_LRT=2*(M3_lnL-M0_lnL)) %>%
mutate(M1_M2_DoF=(M2_np-M1_np)) %>%
mutate(M1_M2_LRT=2*(M2_lnL-M1_lnL)) %>%
mutate(M7_M8_DoF=(M8_np-M7_np)) %>%
mutate(M7_M8_LRT=2*(M8_lnL-M7_lnL)) %>%
mutate(M0_M3_sig = pchisq(M0_M3_LRT, M0_M3_DoF, lower.tail=F)) %>%
mutate(M1_M2_sig = pchisq(M1_M2_LRT, M1_M2_DoF, lower.tail=F)) %>%
mutate(M7_M8_sig = pchisq(M7_M8_LRT, M7_M8_DoF, lower.tail=F))
which(test$M1_M2_sig<0.05)
test <- PositiveSelectionTable %>% rowwise() %>%
mutate(M0_M3_DoF=(M3_np-M0_np)) %>%
mutate(M0_M3_LRT=2*(M3_lnL-M0_lnL)) %>%
mutate(M1_M2_DoF=(M2_np-M1_np)) %>%
mutate(M1_M2_LRT=2*(M2_lnL-M1_lnL)) %>%
mutate(M7_M8_DoF=(M8_np-M7_np)) %>%
mutate(M7_M8_LRT=2*(M8_lnL-M7_lnL)) %>%
mutate(M0_M3_sig = pchisq(M0_M3_LRT, M0_M3_DoF, lower.tail=F)) %>%
mutate(M1_M2_sig = pchisq(M1_M2_LRT, M1_M2_DoF, lower.tail=F)) %>%
mutate(M7_M8_sig = pchisq(M7_M8_LRT, M7_M8_DoF, lower.tail=F)) %>%
mutate(M7_M8_sig_adj = p.adjust(M7_M8_sig,method='fdr'))
test$M7_M8_sig_adj <- p.adjust(test$M7_M8_sig,method='fdr')
test <- PositiveSelectionTable %>% rowwise() %>%
mutate(M0_M3_DoF=(M3_np-M0_np)) %>%
mutate(M0_M3_LRT=2*(M3_lnL-M0_lnL)) %>%
mutate(M1_M2_DoF=(M2_np-M1_np)) %>%
mutate(M1_M2_LRT=2*(M2_lnL-M1_lnL)) %>%
mutate(M7_M8_DoF=(M8_np-M7_np)) %>%
mutate(M7_M8_LRT=2*(M8_lnL-M7_lnL)) %>%
mutate(M0_M3_sig = pchisq(M0_M3_LRT, M0_M3_DoF, lower.tail=F)) %>%
mutate(M1_M2_sig = pchisq(M1_M2_LRT, M1_M2_DoF, lower.tail=F)) %>%
mutate(M7_M8_sig = pchisq(M7_M8_LRT, M7_M8_DoF, lower.tail=F))
test$M7_M8_sig_adj <- p.adjust(test$M7_M8_sig,method='fdr')
View(test)
test$M7_M8_sig_adj <- p.adjust(pull(test$M7_M8_sig),method='fdr')
test$M7_M8_sig_adj <- p.adjust(test %>% pull(M7_M8_sig),method='fdr')
test %>% pull(M7_M8_sig)
test$M7_M8_sig_adj <- p.adjust(test %>% pull(M7_M8_sig),method='BH')
temp <- test %>% pull(M7_M8_sig)
temp <- test %>% filter(!is.na(M7_M8_sig)) %>% pull(M7_M8_sig)
temp <- p.adjust(test %>% filter(!is.na(M7_M8_sig)) %>% pull(M7_M8_sig),method='fdr')
p.adjust(test %>% filter(!is.na(M7_M8_sig)) %>% pull(M7_M8_sig),method='fdr')
test <- PositiveSelectionTable %>% rowwise() %>%
mutate(M0_M3_DoF=(M3_np-M0_np)) %>%
mutate(M0_M3_LRT=2*(M3_lnL-M0_lnL)) %>%
mutate(M1_M2_DoF=(M2_np-M1_np)) %>%
mutate(M1_M2_LRT=2*(M2_lnL-M1_lnL)) %>%
mutate(M7_M8_DoF=(M8_np-M7_np)) %>%
mutate(M7_M8_LRT=2*(M8_lnL-M7_lnL)) %>%
mutate(M0_M3_sig = pchisq(M0_M3_LRT, M0_M3_DoF, lower.tail=F)) %>%
mutate(M1_M2_sig = pchisq(M1_M2_LRT, M1_M2_DoF, lower.tail=F)) %>%
mutate(M7_M8_sig = pchisq(M7_M8_LRT, M7_M8_DoF, lower.tail=F)) %>%
adjust_pvalue(p.col=M7_M8_sig)
install.packages("rstatix")
library(rstatix)
test <- PositiveSelectionTable %>% rowwise() %>%
mutate(M0_M3_DoF=(M3_np-M0_np)) %>%
mutate(M0_M3_LRT=2*(M3_lnL-M0_lnL)) %>%
mutate(M1_M2_DoF=(M2_np-M1_np)) %>%
mutate(M1_M2_LRT=2*(M2_lnL-M1_lnL)) %>%
mutate(M7_M8_DoF=(M8_np-M7_np)) %>%
mutate(M7_M8_LRT=2*(M8_lnL-M7_lnL)) %>%
mutate(M0_M3_sig = pchisq(M0_M3_LRT, M0_M3_DoF, lower.tail=F)) %>%
mutate(M1_M2_sig = pchisq(M1_M2_LRT, M1_M2_DoF, lower.tail=F)) %>%
mutate(M7_M8_sig = pchisq(M7_M8_LRT, M7_M8_DoF, lower.tail=F)) %>%
adjust_pvalue(p.col=M7_M8_sig)
library(dplyr)
library(ggplot2)
library(caret)
library(reshape2)
library(ggpubr)
library(RColorBrewer)
library(stringr)
library(viridis)
library(ggpubr)
test <- PositiveSelectionTable %>% rowwise() %>%
mutate(M0_M3_DoF=(M3_np-M0_np)) %>%
mutate(M0_M3_LRT=2*(M3_lnL-M0_lnL)) %>%
mutate(M1_M2_DoF=(M2_np-M1_np)) %>%
mutate(M1_M2_LRT=2*(M2_lnL-M1_lnL)) %>%
mutate(M7_M8_DoF=(M8_np-M7_np)) %>%
mutate(M7_M8_LRT=2*(M8_lnL-M7_lnL)) %>%
mutate(M0_M3_sig = pchisq(M0_M3_LRT, M0_M3_DoF, lower.tail=F)) %>%
mutate(M1_M2_sig = pchisq(M1_M2_LRT, M1_M2_DoF, lower.tail=F)) %>%
mutate(M7_M8_sig = pchisq(M7_M8_LRT, M7_M8_DoF, lower.tail=F)) %>%
adjust_pvalue(p.col=M7_M8_sig)
test <- PositiveSelectionTable %>% rowwise() %>%
mutate(M0_M3_DoF=(M3_np-M0_np)) %>%
mutate(M0_M3_LRT=2*(M3_lnL-M0_lnL)) %>%
mutate(M1_M2_DoF=(M2_np-M1_np)) %>%
mutate(M1_M2_LRT=2*(M2_lnL-M1_lnL)) %>%
mutate(M7_M8_DoF=(M8_np-M7_np)) %>%
mutate(M7_M8_LRT=2*(M8_lnL-M7_lnL)) %>%
mutate(M0_M3_sig = pchisq(M0_M3_LRT, M0_M3_DoF, lower.tail=F)) %>%
mutate(M1_M2_sig = pchisq(M1_M2_LRT, M1_M2_DoF, lower.tail=F)) %>%
mutate(M7_M8_sig = pchisq(M7_M8_LRT, M7_M8_DoF, lower.tail=F)) #%>%
test$M7_M8_sig_adj <- adjust_pvalue(test$M7_M8_sig)
View(test)
adjust_pvalue(test,p.col=M7_M8_sig,method="fdr")
adjust_pvalue(as.data.frame(test),p.col=M7_M8_sig,method="fdr")
adjust_pvalue(as.data.frame(test),p.col="M7_M8_sig",method="fdr")
test <- PositiveSelectionTable %>% rowwise() %>%
mutate(M0_M3_DoF=(M3_np-M0_np)) %>%
mutate(M0_M3_LRT=2*(M3_lnL-M0_lnL)) %>%
mutate(M1_M2_DoF=(M2_np-M1_np)) %>%
mutate(M1_M2_LRT=2*(M2_lnL-M1_lnL)) %>%
mutate(M7_M8_DoF=(M8_np-M7_np)) %>%
mutate(M7_M8_LRT=2*(M8_lnL-M7_lnL)) %>%
mutate(M0_M3_sig = pchisq(M0_M3_LRT, M0_M3_DoF, lower.tail=F)) %>%
mutate(M1_M2_sig = pchisq(M1_M2_LRT, M1_M2_DoF, lower.tail=F)) %>%
mutate(M7_M8_sig = pchisq(M7_M8_LRT, M7_M8_DoF, lower.tail=F)) #%>%
test <- adjust_pvalue(as.data.frame(test),p.col="M7_M8_sig",method="fdr")
plot(test$M7_M8_sig,test$M7_M8_sig.adj)
test %>% filter(category1=="Caenorhabditis") %>% pull(M7_M8_sig.adj) %>% hist()
test %>% filter(category1=="Caenorhabditis") %>% ggplot(aes(x=log10(M7_M8_sig.adj)))
test %>% filter(category1=="Caenorhabditis") %>% ggplot(aes(x=log10(M7_M8_sig.adj))) + geom_density()
test %>% filter(category1=="Caenorhabditis") %>% ggplot(aes(x=-log10(M7_M8_sig.adj))) + geom_density() +
geom_density(test %>% filter(category1=="Caenorhabditis"),aes(x=-log10(M7_M8_sig.adj)))
test %>% filter(category1=="Caenorhabditis") %>% ggplot(aes(x=-log10(M7_M8_sig.adj))) + geom_density()
test %>% filter(category1=="Caenorhabditis") %>% ggplot(aes(x=-log10(M7_M8_sig.adj)))
test %>% filter(category1=="Caenorhabditis") %>% ggplot(aes(x=-log10(M7_M8_sig.adj))) + geom_density()
test %>% filter(category1=="Caenorhabditis") %>% ggplot(aes(x=-log10(M7_M8_sig.adj))) + geom_density() +
geom_density(test %>% filter(category1!="Caenorhabditis"),aes(x=-log10(M7_M8_sig.adj)))
test %>% filter(category1=="Caenorhabditis") %>% ggplot(aes(x=-log10(M7_M8_sig.adj))) + geom_density() +
geom_density(data=test %>% filter(category1!="Caenorhabditis"),aes(x=-log10(M7_M8_sig.adj)))
test %>% filter(category1=="Caenorhabditis") %>% mutate(stats=ifelse(M7_M8_sig.adj<0.05,"GUPS","noGUP")) %>% pull(stats) %>% table()
test %>% filter(category2=="Eurhabditis") %>% mutate(stats=ifelse(M7_M8_sig.adj<0.05,"GUPS","noGUP")) %>% pull(stats) %>% table()
test <- PositiveSelectionTable %>% rowwise() %>%
mutate(M0_M3_DoF=(M3_np-M0_np)) %>%
mutate(M0_M3_LRT=2*(M3_lnL-M0_lnL)) %>%
mutate(M1_M2_DoF=(M2_np-M1_np)) %>%
mutate(M1_M2_LRT=2*(M2_lnL-M1_lnL)) %>%
mutate(M7_M8_DoF=(M8_np-M7_np)) %>%
mutate(M7_M8_LRT=2*(M8_lnL-M7_lnL)) %>%
mutate(M0_M3_sig = pchisq(M0_M3_LRT, M0_M3_DoF, lower.tail=T)) %>%
mutate(M1_M2_sig = pchisq(M1_M2_LRT, M1_M2_DoF, lower.tail=T)) %>%
mutate(M7_M8_sig = pchisq(M7_M8_LRT, M7_M8_DoF, lower.tail=T)) #%>%
test <- adjust_pvalue(as.data.frame(test),p.col="M7_M8_sig",method="fdr")
test %>% filter(category1=="Caenorhabditis") %>% ggplot(aes(x=-log10(M7_M8_sig.adj))) + geom_density() +
geom_density(data=test %>% filter(category1!="Caenorhabditis"),aes(x=-log10(M7_M8_sig.adj)))
test %>% filter(category1=="Caenorhabditis") %>% ggplot(aes(x=-log10(M7_M8_sig.adj))) + geom_density() +
geom_density(data=test %>% filter(category1!="Caenorhabditis"),aes(x=-log10(M7_M8_sig.adj)))
test %>% filter(category1=="Caenorhabditis") %>% mutate(stats=ifelse(M7_M8_sig.adj<0.05,"GUPS","noGUP")) %>% pull(stats) %>% table()
test %>% filter(category2=="Eurhabditis") %>% mutate(stats=ifelse(M7_M8_sig.adj<0.05,"GUPS","noGUP")) %>% pull(stats) %>% table()
PositiveSelectionTable <- read.delim("~/PhD/Data/Nematode_Data/z17_Positive_Selection_Table_AC-B0000171/PositiveSelectionTable.txt.clean.txt.sort.uniq.txt.OnlyOneEntry.txt.header.txt", stringsAsFactors=FALSE)
View(PositiveSelectionTable)
PositiveSelectionTable <- read.delim("~/PhD/Data/Nematode_Data/z17_Positive_Selection_Table_AC-B0000171/PositiveSelectionTable.txt.clean.txt.sort.uniq.txt.OnlyOneEntry.txt.header.txt", stringsAsFactors=FALSE)
caeno <- c("cbrenneri","cbriggsae","celegans","cinopinata","cjaponica","cremanei","DF5112")
outgroup <- c("CEW1","DF5006", "DF5012","MT8872","ppacificus")
PositiveSelectionTable <- PositiveSelectionTable %>% rowwise() %>% mutate(category=case_when(
all(unlist(strsplit(Species,split=",")) %in% caeno) ~ "Caenorhabditis",
all(unlist(strsplit(Species,split=",")) %in% outgroup) ~ "Outgroup",
TRUE ~ "Mixed"
))
median <- PositiveSelectionTable %>%
select(category,M0_w) %>%
group_by(category) %>%  summarize(median=median(M0_w))
PositiveSelectionTable %>%
select(category,M0_w) %>%
ggplot(aes(x=M0_w,group=category,fill=category)) +
#geom_histogram(aes(y=..density..), colour="black", fill="white",binwidth=0.005)+
geom_density(alpha=.2#, fill="#FF6666"
) +
theme_bw() +
theme(legend.position="bottom")+
geom_vline(data = median, aes(xintercept = median,color = category), size=0.5,linetype="dashed")
PositiveSelectionTable <- read.delim("~/PhD/Data/Nematode_Data/z17_Positive_Selection_Table_AC-B0000171/PositiveSelectionTable.txt.clean.txt.sort.uniq.txt.OnlyOneEntry.txt.header.txt", stringsAsFactors=FALSE)
caeno <- c("cbrenneri","cbriggsae","celegans","cinopinata","cjaponica","cremanei","DF5112")
eurhabditis <- c("cbrenneri","cbriggsae","celegans","cinopinata","cjaponica","cremanei","DF5112","CEW1","DF5006")
#all <-              "DF5012","MT8872","ppacificus")
PositiveSelectionTable <- PositiveSelectionTable %>% rowwise() %>% mutate(category1=case_when(
all(unlist(strsplit(Species,split=",")) %in% caeno) ~ "Caenorhabditis",
TRUE ~ "Mixed"
)) %>% mutate(category2=case_when(
all(unlist(strsplit(Species,split=",")) %in% eurhabditis) ~ "Eurhabditis",
TRUE ~ "Mixed"
)) %>% mutate(category3="ALL")
median <- rbind(PositiveSelectionTable %>%
group_by(category1) %>%  summarize(median1=median(M0_w)) %>% rename(category=category1) %>% rename(median=median1),
PositiveSelectionTable %>%
group_by(category2) %>%  summarize(median2=median(M0_w)) %>% rename(category=category2) %>% rename(median=median2),
as_tibble(cbind("ALL",PositiveSelectionTable %>% pull(M0_w) %>% median())) %>% rename(category=V1) %>% rename(median=V2))
PositiveSelectionTable %>%
select(category1,M0_w) %>%
filter(category1=="Caenorhabditis") %>%
ggplot(aes(x=M0_w,group=category1,fill=category1)) +
#geom_histogram(aes(y=..density..), colour="black", fill="white",binwidth=0.005)+
geom_density(alpha=.2#, fill="#FF6666"
) +
geom_density(data=PositiveSelectionTable %>%
select(category2,M0_w) %>%
filter(category2=="Eurhabditis"),aes(x=M0_w,group=category2,fill=category2),
alpha=.2#, fill="#FF6666"
) +
geom_density(data=PositiveSelectionTable %>%
select(category3,M0_w)
,aes(x=M0_w ,group=category3,fill=category3
),
alpha=.2#, fill="#FF6666"
) +
theme_bw() +
theme(legend.position="bottom")+
labs(fill='Orthology subgroups') +
geom_vline(data = median %>% slice(c(1,3,5)), aes(xintercept = as.numeric(median),color = category), size=0.5,linetype="dashed", show.legend = F)
